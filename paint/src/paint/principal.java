/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paint;

import java.awt.Checkbox;
import java.awt.Color;
import java.awt.Point;
import java.awt.Transparency;
import java.awt.color.ColorSpace;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.awt.image.ByteLookupTable;
import java.awt.image.ColorConvertOp;
import java.awt.image.ColorModel;
import java.awt.image.ComponentColorModel;
import java.awt.image.ConvolveOp;
import java.awt.image.DataBuffer;
import java.awt.image.Kernel;
import java.awt.image.LookupOp;
import java.awt.image.LookupTable;
import java.awt.image.RescaleOp;
import java.awt.image.WritableRaster;
import java.io.File;
import java.lang.reflect.Array;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameEvent;
import sm.image.KernelProducer;
import sm.image.LookupTableProducer;
/**
 *
 * @author julius
 */
public class principal extends javax.swing.JFrame {
    //private Lienzo lienzo = new Lienzo();
    /**
     * Creates new form principal
     */
    private boolean primera = true, isYCC, isGREY, isRGB;
    protected BufferedImage mainImage;
    protected BufferedImage prIm;
    private int brillo;
    private float mascara[];
    private float rotacion;
    private String tituloBanda;
    private static Color colores[] = {Color.red, Color.black, Color.blue, Color.green, Color.white, Color.yellow};
    private listaColores lista = new listaColores();
    
    public principal() {
        initComponents();
        this.setTitle("Paint");
        jComboBox2.setRenderer(lista);
 
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jSlider1 = new javax.swing.JSlider();
        jPanel2 = new javax.swing.JPanel();
        contraste = new javax.swing.JButton();
        iluminar = new javax.swing.JButton();
        oscurecer = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        seno = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        gamas = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jSlider3 = new javax.swing.JSlider();
        giro90 = new javax.swing.JButton();
        giro180 = new javax.swing.JButton();
        giro270 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        jPanel11 = new javax.swing.JPanel();
        botonNuevo = new javax.swing.JToggleButton();
        botonAbrir = new javax.swing.JToggleButton();
        botonGuardar = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jPanel6 = new javax.swing.JPanel();
        botonLapiz = new javax.swing.JToggleButton();
        botonRaya = new javax.swing.JToggleButton();
        botonRectangulo = new javax.swing.JToggleButton();
        botonCirculo = new javax.swing.JToggleButton();
        botonSeleccionar = new javax.swing.JToggleButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jSpinner1 = new javax.swing.JSpinner();
        botonRelleno = new javax.swing.JToggleButton();
        botonTransparencia = new javax.swing.JToggleButton();
        botonAlisar = new javax.swing.JToggleButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jPanel15 = new javax.swing.JPanel();
        jComboBox2 = new javax.swing.JComboBox(colores);
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        itemNuevo = new javax.swing.JMenuItem();
        itemAbrir = new javax.swing.JMenuItem();
        itemGuardar = new javax.swing.JMenuItem();
        submenuImprimir = new javax.swing.JMenu();
        itemImpersora = new javax.swing.JMenuItem();
        itemFichero = new javax.swing.JMenuItem();
        menuEditar = new javax.swing.JMenu();
        itemCopiar = new javax.swing.JMenuItem();
        itemCortar = new javax.swing.JMenuItem();
        itemPegar = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        menuImagen = new javax.swing.JMenu();
        rescale = new javax.swing.JMenuItem();
        convolve = new javax.swing.JMenuItem();
        afine = new javax.swing.JMenuItem();
        banda = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        coverter = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1300, 900));
        setMinimumSize(new java.awt.Dimension(1300, 900));
        setPreferredSize(new java.awt.Dimension(1300, 900));

        jPanel1.setMaximumSize(new java.awt.Dimension(1100, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(1100, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(1100, 100));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Punto");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.add(jLabel1);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jPanel7.setMaximumSize(new java.awt.Dimension(800, 100));
        jPanel7.setMinimumSize(new java.awt.Dimension(800, 100));
        jPanel7.setName(""); // NOI18N
        jPanel7.setPreferredSize(new java.awt.Dimension(800, 100));
        jPanel7.setRequestFocusEnabled(false);
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel14.setMaximumSize(new java.awt.Dimension(300, 60));
        jPanel14.setMinimumSize(new java.awt.Dimension(300, 60));
        jPanel14.setName(""); // NOI18N
        jPanel14.setPreferredSize(new java.awt.Dimension(300, 60));
        jPanel14.setRequestFocusEnabled(false);
        jPanel14.setVerifyInputWhenFocusTarget(false);
        jPanel14.setLayout(new javax.swing.BoxLayout(jPanel14, javax.swing.BoxLayout.LINE_AXIS));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Media5x5", "Media7x7", "Binomial", "Enfoque", "Relieve", "Fronteras", "Deshacer", "" }));
        jComboBox1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));
        jComboBox1.setMaximumSize(new java.awt.Dimension(150, 120));
        jComboBox1.setMinimumSize(new java.awt.Dimension(150, 120));
        jComboBox1.setName(""); // NOI18N
        jComboBox1.setPreferredSize(new java.awt.Dimension(150, 120));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel14.add(jComboBox1);

        jSlider1.setMaximum(255);
        jSlider1.setMinimum(-255);
        jSlider1.setValue(0);
        jSlider1.setBorder(javax.swing.BorderFactory.createTitledBorder("Brillo"));
        jSlider1.setMaximumSize(new java.awt.Dimension(150, 110));
        jSlider1.setMinimumSize(new java.awt.Dimension(150, 110));
        jSlider1.setPreferredSize(new java.awt.Dimension(150, 110));
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        jSlider1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jSlider1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSlider1FocusLost(evt);
            }
        });
        jPanel14.add(jSlider1);

        jPanel7.add(jPanel14);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Contraste"));
        jPanel2.setMaximumSize(new java.awt.Dimension(180, 60));
        jPanel2.setMinimumSize(new java.awt.Dimension(180, 60));
        jPanel2.setPreferredSize(new java.awt.Dimension(180, 60));
        jPanel2.setVerifyInputWhenFocusTarget(false);
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        contraste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/contraste.png"))); // NOI18N
        contraste.setMaximumSize(new java.awt.Dimension(50, 25));
        contraste.setMinimumSize(new java.awt.Dimension(50, 25));
        contraste.setPreferredSize(new java.awt.Dimension(50, 25));
        contraste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contrasteActionPerformed(evt);
            }
        });
        jPanel2.add(contraste);

        iluminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/iluminar.png"))); // NOI18N
        iluminar.setMaximumSize(new java.awt.Dimension(50, 25));
        iluminar.setMinimumSize(new java.awt.Dimension(50, 25));
        iluminar.setPreferredSize(new java.awt.Dimension(50, 25));
        iluminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iluminarActionPerformed(evt);
            }
        });
        jPanel2.add(iluminar);

        oscurecer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/oscurecer.png"))); // NOI18N
        oscurecer.setMaximumSize(new java.awt.Dimension(50, 25));
        oscurecer.setMinimumSize(new java.awt.Dimension(50, 25));
        oscurecer.setPreferredSize(new java.awt.Dimension(50, 25));
        oscurecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oscurecerActionPerformed(evt);
            }
        });
        jPanel2.add(oscurecer);

        jPanel7.add(jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Onda"));
        jPanel4.setMaximumSize(new java.awt.Dimension(120, 60));
        jPanel4.setMinimumSize(new java.awt.Dimension(120, 60));
        jPanel4.setPreferredSize(new java.awt.Dimension(120, 60));
        jPanel4.setRequestFocusEnabled(false);
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        seno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sinusoidal.png"))); // NOI18N
        seno.setMaximumSize(new java.awt.Dimension(50, 25));
        seno.setMinimumSize(new java.awt.Dimension(50, 25));
        seno.setPreferredSize(new java.awt.Dimension(50, 25));
        seno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senoActionPerformed(evt);
            }
        });
        jPanel4.add(seno);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/sepia.png"))); // NOI18N
        jButton1.setMaximumSize(new java.awt.Dimension(50, 25));
        jButton1.setMinimumSize(new java.awt.Dimension(50, 25));
        jButton1.setPreferredSize(new java.awt.Dimension(50, 25));
        jPanel4.add(jButton1);

        jPanel7.add(jPanel4);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Color"));
        jPanel9.setMaximumSize(new java.awt.Dimension(150, 70));
        jPanel9.setMinimumSize(new java.awt.Dimension(150, 70));
        jPanel9.setPreferredSize(new java.awt.Dimension(150, 70));
        jPanel9.setLayout(new javax.swing.BoxLayout(jPanel9, javax.swing.BoxLayout.LINE_AXIS));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/bandas.png"))); // NOI18N
        jButton2.setMaximumSize(new java.awt.Dimension(50, 50));
        jButton2.setMinimumSize(new java.awt.Dimension(50, 50));
        jButton2.setPreferredSize(new java.awt.Dimension(50, 50));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton2);

        gamas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "RGB", "YCC", "GREY" }));
        gamas.setMaximumSize(new java.awt.Dimension(70, 50));
        gamas.setMinimumSize(new java.awt.Dimension(70, 50));
        gamas.setPreferredSize(new java.awt.Dimension(70, 50));
        gamas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gamasActionPerformed(evt);
            }
        });
        jPanel9.add(gamas);

        jPanel7.add(jPanel9);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Rotación"));
        jPanel5.setMaximumSize(new java.awt.Dimension(280, 60));
        jPanel5.setMinimumSize(new java.awt.Dimension(280, 60));
        jPanel5.setPreferredSize(new java.awt.Dimension(280, 60));
        jPanel5.setRequestFocusEnabled(false);
        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jSlider3.setMaximum(360);
        jSlider3.setMinimum(-360);
        jSlider3.setValue(0);
        jSlider3.setMaximumSize(new java.awt.Dimension(100, 20));
        jSlider3.setMinimumSize(new java.awt.Dimension(100, 20));
        jSlider3.setPreferredSize(new java.awt.Dimension(100, 20));
        jSlider3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider3StateChanged(evt);
            }
        });
        jSlider3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jSlider3FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSlider3FocusLost(evt);
            }
        });
        jPanel5.add(jSlider3);

        giro90.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rotacion90.png"))); // NOI18N
        giro90.setMaximumSize(new java.awt.Dimension(50, 25));
        giro90.setMinimumSize(new java.awt.Dimension(50, 25));
        giro90.setPreferredSize(new java.awt.Dimension(50, 25));
        giro90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giro90ActionPerformed(evt);
            }
        });
        jPanel5.add(giro90);

        giro180.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rotacion180.png"))); // NOI18N
        giro180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giro180ActionPerformed(evt);
            }
        });
        jPanel5.add(giro180);

        giro270.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rotacion270.png"))); // NOI18N
        giro270.setMaximumSize(new java.awt.Dimension(50, 25));
        giro270.setMinimumSize(new java.awt.Dimension(50, 25));
        giro270.setPreferredSize(new java.awt.Dimension(50, 25));
        giro270.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giro270ActionPerformed(evt);
            }
        });
        jPanel5.add(giro270);

        jPanel7.add(jPanel5);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Escala"));
        jPanel8.setMaximumSize(new java.awt.Dimension(130, 60));
        jPanel8.setMinimumSize(new java.awt.Dimension(130, 60));
        jPanel8.setPreferredSize(new java.awt.Dimension(130, 60));
        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.LINE_AXIS));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/aumentar.png"))); // NOI18N
        jButton3.setMaximumSize(new java.awt.Dimension(50, 25));
        jButton3.setMinimumSize(new java.awt.Dimension(50, 25));
        jButton3.setPreferredSize(new java.awt.Dimension(50, 25));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/disminuir.png"))); // NOI18N
        jButton4.setMaximumSize(new java.awt.Dimension(50, 25));
        jButton4.setMinimumSize(new java.awt.Dimension(50, 25));
        jButton4.setPreferredSize(new java.awt.Dimension(50, 25));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel8.add(jButton4);

        jPanel7.add(jPanel8);

        jPanel1.add(jPanel7, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jToolBar1.setRollover(true);
        jToolBar1.setMaximumSize(new java.awt.Dimension(800, 70));
        jToolBar1.setMinimumSize(new java.awt.Dimension(800, 70));
        jToolBar1.setPreferredSize(new java.awt.Dimension(798, 70));

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Archivo"));
        jPanel11.setLayout(new javax.swing.BoxLayout(jPanel11, javax.swing.BoxLayout.LINE_AXIS));

        botonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/nuevo.png"))); // NOI18N
        botonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNuevoActionPerformed(evt);
            }
        });
        jPanel11.add(botonNuevo);

        botonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/abrir.png"))); // NOI18N
        botonAbrir.setMaximumSize(new java.awt.Dimension(56, 32));
        botonAbrir.setMinimumSize(new java.awt.Dimension(56, 32));
        botonAbrir.setPreferredSize(new java.awt.Dimension(56, 32));
        botonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAbrirActionPerformed(evt);
            }
        });
        jPanel11.add(botonAbrir);

        botonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/guardar.png"))); // NOI18N
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });
        jPanel11.add(botonGuardar);

        jToolBar1.add(jPanel11);

        jSeparator1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jSeparator1.setSeparatorSize(new java.awt.Dimension(5, 33));
        jToolBar1.add(jSeparator1);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Formas/Mover"));
        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.LINE_AXIS));

        buttonGroup1.add(botonLapiz);
        botonLapiz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/punto.png"))); // NOI18N
        botonLapiz.setFocusable(false);
        botonLapiz.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonLapiz.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonLapiz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLapizActionPerformed(evt);
            }
        });
        jPanel6.add(botonLapiz);

        buttonGroup1.add(botonRaya);
        botonRaya.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/linea.png"))); // NOI18N
        botonRaya.setFocusable(false);
        botonRaya.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonRaya.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonRaya.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRayaActionPerformed(evt);
            }
        });
        jPanel6.add(botonRaya);

        buttonGroup1.add(botonRectangulo);
        botonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rectangulo.png"))); // NOI18N
        botonRectangulo.setFocusable(false);
        botonRectangulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonRectangulo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonRectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRectanguloActionPerformed(evt);
            }
        });
        jPanel6.add(botonRectangulo);

        buttonGroup1.add(botonCirculo);
        botonCirculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/elipse.png"))); // NOI18N
        botonCirculo.setFocusable(false);
        botonCirculo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonCirculo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonCirculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCirculoActionPerformed(evt);
            }
        });
        jPanel6.add(botonCirculo);

        botonSeleccionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/seleccion.png"))); // NOI18N
        botonSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSeleccionarActionPerformed(evt);
            }
        });
        jPanel6.add(botonSeleccionar);

        jToolBar1.add(jPanel6);

        jSeparator2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jSeparator2.setSeparatorSize(new java.awt.Dimension(5, 33));
        jToolBar1.add(jSeparator2);

        jPanel12.setLayout(new javax.swing.BoxLayout(jPanel12, javax.swing.BoxLayout.LINE_AXIS));
        jToolBar1.add(jPanel12);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Edicion"));
        jPanel13.setLayout(new javax.swing.BoxLayout(jPanel13, javax.swing.BoxLayout.LINE_AXIS));

        jSpinner1.setMaximumSize(new java.awt.Dimension(56, 32));
        jSpinner1.setMinimumSize(new java.awt.Dimension(56, 32));
        jSpinner1.setName(""); // NOI18N
        jSpinner1.setPreferredSize(new java.awt.Dimension(56, 32));
        jSpinner1.setRequestFocusEnabled(false);
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });
        jPanel13.add(jSpinner1);

        botonRelleno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rellenar.png"))); // NOI18N
        botonRelleno.setMaximumSize(new java.awt.Dimension(56, 32));
        botonRelleno.setMinimumSize(new java.awt.Dimension(56, 32));
        botonRelleno.setPreferredSize(new java.awt.Dimension(56, 32));
        botonRelleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRellenoActionPerformed(evt);
            }
        });
        jPanel13.add(botonRelleno);

        botonTransparencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/transparencia.png"))); // NOI18N
        botonTransparencia.setMaximumSize(new java.awt.Dimension(56, 32));
        botonTransparencia.setMinimumSize(new java.awt.Dimension(56, 32));
        botonTransparencia.setPreferredSize(new java.awt.Dimension(56, 32));
        botonTransparencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonTransparenciaActionPerformed(evt);
            }
        });
        jPanel13.add(botonTransparencia);

        botonAlisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/alisar.png"))); // NOI18N
        botonAlisar.setMaximumSize(new java.awt.Dimension(56, 32));
        botonAlisar.setMinimumSize(new java.awt.Dimension(56, 32));
        botonAlisar.setPreferredSize(new java.awt.Dimension(56, 32));
        botonAlisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAlisarActionPerformed(evt);
            }
        });
        jPanel13.add(botonAlisar);

        jToolBar1.add(jPanel13);
        jToolBar1.add(jSeparator3);

        jPanel15.setMaximumSize(new java.awt.Dimension(100, 75));
        jPanel15.setMinimumSize(new java.awt.Dimension(100, 75));
        jPanel15.setPreferredSize(new java.awt.Dimension(100, 75));
        jPanel15.setLayout(new javax.swing.BoxLayout(jPanel15, javax.swing.BoxLayout.LINE_AXIS));

        jComboBox2.setToolTipText("");
        jComboBox2.setBorder(javax.swing.BorderFactory.createTitledBorder("Colores"));
        jComboBox2.setMaximumSize(new java.awt.Dimension(100, 75));
        jComboBox2.setMinimumSize(new java.awt.Dimension(100, 75));
        jComboBox2.setPreferredSize(new java.awt.Dimension(100, 75));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        jPanel15.add(jComboBox2);

        jToolBar1.add(jPanel15);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jDesktopPane1.setMaximumSize(new java.awt.Dimension(800, 800));
        jDesktopPane1.setMinimumSize(new java.awt.Dimension(800, 800));
        getContentPane().add(jDesktopPane1, java.awt.BorderLayout.CENTER);
        jDesktopPane1.getAccessibleContext().setAccessibleName("");

        jMenuBar1.setMaximumSize(new java.awt.Dimension(800, 32769));
        jMenuBar1.setMinimumSize(new java.awt.Dimension(800, 21));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(800, 21));

        menuArchivo.setText("Archivo");

        itemNuevo.setText("Nuevo");
        itemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNuevoActionPerformed(evt);
            }
        });
        menuArchivo.add(itemNuevo);

        itemAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        itemAbrir.setText("Abrir");
        itemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemAbrirActionPerformed(evt);
            }
        });
        menuArchivo.add(itemAbrir);

        itemGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        itemGuardar.setText("Guardar");
        itemGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                itemGuardarMousePressed(evt);
            }
        });
        menuArchivo.add(itemGuardar);

        submenuImprimir.setText("Imprimir");

        itemImpersora.setText("Impresora");
        submenuImprimir.add(itemImpersora);

        itemFichero.setText("Fichero");
        submenuImprimir.add(itemFichero);

        menuArchivo.add(submenuImprimir);

        jMenuBar1.add(menuArchivo);

        menuEditar.setText("Editar");

        itemCopiar.setText("Copiar");
        menuEditar.add(itemCopiar);

        itemCortar.setText("Cortar");
        menuEditar.add(itemCortar);

        itemPegar.setText("Pegar");
        menuEditar.add(itemPegar);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Ver/Ocultar Barra de estado");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuEditar.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Ver/Ocultar Grosor");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        menuEditar.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem3.setText("Ver/Ocultar Propiedades");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        menuEditar.add(jMenuItem3);

        jMenuBar1.add(menuEditar);

        menuImagen.setText("Imagen");

        rescale.setText("RescaleOp");
        rescale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rescaleActionPerformed(evt);
            }
        });
        menuImagen.add(rescale);

        convolve.setText("ConvolveOp");
        menuImagen.add(convolve);

        afine.setText("AfineTransformOp");
        afine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afineActionPerformed(evt);
            }
        });
        menuImagen.add(afine);

        banda.setText("LookUpOp");
        banda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bandaActionPerformed(evt);
            }
        });
        menuImagen.add(banda);

        jMenuItem4.setText("BandCombineOp");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        menuImagen.add(jMenuItem4);

        coverter.setText("ColorConvertOp");
        menuImagen.add(coverter);

        jMenuBar1.add(menuImagen);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generarMascara(int n){
        mascara = new float[n*n];
        for (int i = 0; i < n*n; ++i){
            mascara[i] = (float) (1.0/(n*n));
        }
       
    }
    
    
    
    public static void formaAnterior(javax.swing.event.InternalFrameEvent evt){
        VentanaInterna vi = new VentanaInterna();
        vi = (VentanaInterna)evt.getInternalFrame();
        
        formas f = vi.getLienzo().getForma();
        switch(f){
            case Puntos:
                botonLapiz.setSelected(true);
                break;
            case Lineas:
                botonRaya.setSelected(true);
                break;
            case Rectangulo:
                botonRectangulo.setSelected(true);
                break;
            case Circulo:
                botonCirculo.setSelected(true);
                break;
            default:
                System.out.println("forma no correcta");
        }
        
        Color c = vi.getLienzo().getColor();
       
        if (c.equals(Color.red)){
            jComboBox2.setSelectedIndex(0);
        }else if (c.equals(Color.black)){
            jComboBox2.setSelectedIndex(1);
        }else if(c.equals(Color.white)){
            jComboBox2.setSelectedIndex(4);
        }else if (c.equals(Color.blue)){
            jComboBox2.setSelectedIndex(2);
        }else if (c.equals(Color.yellow)){
            jComboBox2.setSelectedIndex(5);
        }else if (c.equals(Color.green)){
            jComboBox2.setSelectedIndex(3);
        }

        
        botonAlisar.setSelected(vi.getLienzo().isRender());
        botonSeleccionar.setSelected(vi.getLienzo().isEditar());
        botonTransparencia.setSelected(vi.getLienzo().isCompose());
        botonRelleno.setSelected(vi.getLienzo().isRelleno());
        jSpinner1.setValue(vi.getLienzo().getStrokeValue());
       
    }           
    
    private void itemGuardarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemGuardarMousePressed
        // TODO add your handling code here:
        VentanaInterna vi=(VentanaInterna) jDesktopPane1.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                BufferedImage img = vi.getLienzo().getImage(true);
                    if (img != null) {
                        File f = dlg.getSelectedFile();
                        ImageIO.write(img, "jpg", f);
                        vi.setTitle(f.getName());
                    }
                }catch (Exception ex) {
                    System.err.println("Error al guardar la imagen");
                }
            }
        }
    }//GEN-LAST:event_itemGuardarMousePressed

    private void botonLapizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLapizActionPerformed
        // TODO add your handling code here:
        this.jLabel1.setText("Puntos");
        VentanaInterna vi = new VentanaInterna();
        vi = (VentanaInterna)jDesktopPane1.getSelectedFrame();
        if (vi != null){
            vi.getLienzo().setFormaLienzo(formas.Puntos);
        }
    }//GEN-LAST:event_botonLapizActionPerformed

    private void botonRayaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRayaActionPerformed
        // TODO add your handling code here:
        this.jLabel1.setText("Linea");
        VentanaInterna vi = new VentanaInterna();
        vi = (VentanaInterna)jDesktopPane1.getSelectedFrame();
        if (vi != null)
            vi.getLienzo().setFormaLienzo(formas.Lineas);
    }//GEN-LAST:event_botonRayaActionPerformed

    private void botonRectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRectanguloActionPerformed
        // TODO add your handling code here:
        this.jLabel1.setText("Rectangulo");
        VentanaInterna vi = new VentanaInterna();
        vi = (VentanaInterna)jDesktopPane1.getSelectedFrame();
        if (vi != null)
            vi.getLienzo().setFormaLienzo(formas.Rectangulo);
    }//GEN-LAST:event_botonRectanguloActionPerformed

    private void botonCirculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCirculoActionPerformed
        // TODO add your handling code here:
        this.jLabel1.setText("Circulo");
        VentanaInterna vi = new VentanaInterna();
        vi = (VentanaInterna)jDesktopPane1.getSelectedFrame();
        if (vi != null)
            vi.getLienzo().setFormaLienzo(formas.Circulo);
    }//GEN-LAST:event_botonCirculoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
        if(jLabel1.isVisible()){
            this.jLabel1.setVisible(false);
        }else{
            this.jLabel1.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void itemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNuevoActionPerformed
        // TODO add your handling code here:
        
        VentanaInterna vi = new VentanaInterna();
        vi.getLienzo().setFormaLienzo(formas.Puntos);
        this.botonLapiz.setSelected(true);
        jComboBox2.setSelectedIndex(0);
        jDesktopPane1.add(vi);
        vi.setVisible(true);
        BufferedImage img;
        img = new BufferedImage(300,300,BufferedImage.TYPE_INT_RGB);
        vi.getLienzo().setIm(img);
 
        
        
    }//GEN-LAST:event_itemNuevoActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        // TODO add your handling code here:
        VentanaInterna vi = new VentanaInterna();
        vi = (VentanaInterna)jDesktopPane1.getSelectedFrame();
        if (vi != null){
            vi.getLienzo().setStroke((int)jSpinner1.getValue());
            vi.getLienzo().repaint();
        }
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void itemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemAbrirActionPerformed
        // TODO add your handling code here:
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
            try{
                jComboBox2.setSelectedIndex(0);
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                prIm = img;
                VentanaInterna vi = new VentanaInterna();
                vi.getLienzo().setIm(img);
                this.jDesktopPane1.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
                vi.getLienzo().setCargada(true);
            }catch(Exception ex){
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_itemAbrirActionPerformed

    private void botonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNuevoActionPerformed
        // TODO add your handling code here:
        this.botonNuevo.setSelected(false);
        VentanaInterna vi = new VentanaInterna();
        vi.getLienzo().setFormaLienzo(formas.Puntos);
        jComboBox2.setSelectedIndex(0);
        this.botonLapiz.setSelected(true);
        jDesktopPane1.add(vi);
        vi.setVisible(true); 
        BufferedImage img;
        img = new BufferedImage(300,300,BufferedImage.TYPE_INT_RGB);
        vi.getLienzo().setIm(img);
    }//GEN-LAST:event_botonNuevoActionPerformed

    private void botonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAbrirActionPerformed
        // TODO add your handling code here:
        this.botonAbrir.setSelected(false);
        jComboBox2.setSelectedIndex(0);
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
            try{
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                prIm = img;
                VentanaInterna vi = new VentanaInterna();
                vi.getLienzo().setIm(img);
                this.jDesktopPane1.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
                vi.getLienzo().setCargada(true);
            }catch(Exception ex){
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_botonAbrirActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        /// TODO add your handling code here:
        this.botonGuardar.setSelected(false);
        VentanaInterna vi=(VentanaInterna) jDesktopPane1.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                BufferedImage img = vi.getLienzo().getImage(true);
                    if (img != null) {
                        File f = dlg.getSelectedFile();
                        ImageIO.write(img, "jpg", f);
                        vi.setTitle(f.getName());
                    }
                }catch (Exception ex) {
                    System.err.println("Error al guardar la imagen");
                }
            }
        }
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void rescaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rescaleActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    RescaleOp rop = new RescaleOp(1.0F, 100.0F, null);
                    BufferedImage imdest = rop.filter(mainImage, vi.getLienzo().getIm());
                    vi.getLienzo().setIm(imdest);
                    vi.getLienzo().repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }

    }//GEN-LAST:event_rescaleActionPerformed

    private void jSlider1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSlider1FocusGained
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna)(jDesktopPane1.getSelectedFrame());
        if(vi!=null){
            ColorModel cm = vi.getLienzo().getIm().getColorModel();
            WritableRaster raster = vi.getLienzo().getIm().copyData(null);
            boolean alfaPre = vi.getLienzo().getIm().isAlphaPremultiplied();
            mainImage = new BufferedImage(cm,raster,alfaPre,null);
            
        }
        
    }//GEN-LAST:event_jSlider1FocusGained

    private void jSlider1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSlider1FocusLost
        // TODO add your handling code here:
        mainImage = null;
    }//GEN-LAST:event_jSlider1FocusLost

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna)(jDesktopPane1.getSelectedFrame());
        
        if(vi!=null){
            this.brillo = this.jSlider1.getValue();
            RescaleOp rop = new RescaleOp(1.0F, (float)brillo,null);
            BufferedImage imdest = rop.filter(mainImage, vi.getLienzo().getIm());
            vi.getLienzo().setIm(imdest);
            JInternalFrame f[] = jDesktopPane1.getAllFrames();
            VentanaInterna v[] = new VentanaInterna[f.length];
            
            for (int i = 0; i < f.length; ++i){
                v[i] = (VentanaInterna) f[i];
            }
            
            for (int i =0; i < v.length; ++i){
               v[i].getLienzo().repaint();
            }
            
        }
    }//GEN-LAST:event_jSlider1StateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String estado = (String)jComboBox1.getSelectedItem();
        boolean clean = false;
        Kernel k = null;
        VentanaInterna vi = (VentanaInterna)(jDesktopPane1.getSelectedFrame());
        
        if(estado.equals("Media5x5")){
            this.generarMascara(5);
            k = new Kernel(5, 5, mascara);
            
        }else if(estado.equals("Media7x7")){
            this.generarMascara(7);
            k = new Kernel (7, 7, mascara);
            
        }else if(estado.equals("Binomial")){
            k = KernelProducer.createKernel(KernelProducer.TYPE_BINOMIAL_3x3);
            
        }else if(estado.equals("Relieve")){
            k = KernelProducer.createKernel(KernelProducer.TYPE_RELIEVE_3x3);
            
        }else if(estado.equals("Enfoque")){
            k = KernelProducer.createKernel(KernelProducer.TYPE_ENFOQUE_3x3);
            
        }else if(estado.equals("Fronteras")){          
            k = KernelProducer.createKernel(KernelProducer.TYPE_LAPLACIANA_3x3);
            
        }else if (estado.equals("Deshacer")){
            vi.getLienzo().setIm(prIm);
            System.out.println("gola");
            vi.getLienzo().repaint();
            k = null;
        }
        
        if (k != null){
            mainImage = vi.getLienzo().getIm();
            if(vi!=null){
               ConvolveOp cop = new ConvolveOp(k,ConvolveOp.EDGE_NO_OP,null);
               if(mainImage != null){
                   BufferedImage imdest = cop.filter(mainImage, null);
                   vi.getLienzo().setIm(imdest);
                   vi.getLienzo().repaint();
                   clean = false;
               }
            }
        }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void botonSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSeleccionarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = new VentanaInterna();
        vi = (VentanaInterna)jDesktopPane1.getSelectedFrame();
        if (vi != null){
            vi.getLienzo().setEditar(botonSeleccionar.isSelected());
            vi.getLienzo().repaint();
        }
    }//GEN-LAST:event_botonSeleccionarActionPerformed

    private void botonAlisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAlisarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = new VentanaInterna();
        vi = (VentanaInterna)jDesktopPane1.getSelectedFrame();
        if (vi != null){
            vi.getLienzo().setRender(this.botonAlisar.isSelected());
            vi.getLienzo().repaint();
        }
    }//GEN-LAST:event_botonAlisarActionPerformed

    private void botonTransparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonTransparenciaActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = new VentanaInterna();
        vi = (VentanaInterna)jDesktopPane1.getSelectedFrame();
        vi.getLienzo().setCompose(this.botonTransparencia.isSelected());
        vi.getLienzo().repaint();
    }//GEN-LAST:event_botonTransparenciaActionPerformed

    private void botonRellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRellenoActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = new VentanaInterna();
        vi = (VentanaInterna)jDesktopPane1.getSelectedFrame();
        if (vi != null){
            vi.getLienzo().setRelleno(this.botonRelleno.isSelected());
            vi.getLienzo().repaint();
        }
    }//GEN-LAST:event_botonRellenoActionPerformed

    private void afineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afineActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    AffineTransform at; //= AffineTransform.getScaleInstance(1.25,1.25);
                    at = AffineTransform.getRotateInstance(Math.toRadians(180.0),
                    mainImage.getWidth()/2,mainImage.getHeight()/2);
                    //at = AffineTransform.getShearInstance(0.5,0.0);
                    //at = AffineTransform.getTranslateInstance(20.0,20.0);
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imdest = atop.filter(mainImage, null);
                    vi.getLienzo().setIm(imdest);
                    vi.getLienzo().repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_afineActionPerformed

    private void bandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bandaActionPerformed
        // TODO add your handling code here:
        //LookupTable lt;
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    byte f[] = new byte[256];
                    for (int i=0; i<256; i++)
                        f[i] = (byte)(255-i); // Negativo
                    ByteLookupTable lt = new ByteLookupTable(0, f);
                    LookupOp lop = new LookupOp(lt, null);
                    BufferedImage imdest = lop.filter( mainImage,null);
                    vi.getLienzo().setIm(imdest);
                    vi.getLienzo().repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_bandaActionPerformed

    private void jSlider3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSlider3FocusGained
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi!=null)
            mainImage = vi.getLienzo().getIm();
    }//GEN-LAST:event_jSlider3FocusGained

    private void jSlider3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSlider3FocusLost
        // TODO add your handling code here:
        mainImage = null;
    }//GEN-LAST:event_jSlider3FocusLost

    private void jSlider3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider3StateChanged
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        rotacion=jSlider3.getValue();
        if (vi != null) {
            try{
                double r = Math.toRadians(rotacion);
                Point c = new Point(mainImage.getWidth()/2, mainImage.getHeight()/2);
                AffineTransform at = AffineTransform.getRotateInstance(r,c.x,c.y);
                AffineTransformOp atop;
                atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
                BufferedImage imdest = atop.filter(mainImage, null);
                vi.getLienzo().setIm(imdest);
                vi.getLienzo().repaint();
            }catch(IllegalArgumentException e){
                System.err.println(e.getLocalizedMessage());
            }
            
        }
    }//GEN-LAST:event_jSlider3StateChanged

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_GRAY);
                    ComponentColorModel cm = new ComponentColorModel(cs, false, false,
                    Transparency.OPAQUE,
                    DataBuffer.TYPE_BYTE);
              
                    for (int i = 0; i < 3; i++) {
                        
                        int bandList[] = {i};
                        WritableRaster bandRaster2 = (WritableRaster)mainImage.getRaster().createWritableChild(0,0,
                        mainImage.getWidth(), mainImage.getHeight(), 0, 0, bandList);
                        BufferedImage imgBanda = new BufferedImage(cm, bandRaster2, false, null);

                        botonNuevoActionPerformed(evt);
                        VentanaInterna nueva = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
                        
                        nueva.getLienzo().setIm(imgBanda);
                        nueva.getLienzo().setCargada(true);
                        nueva.setTitle(Integer.toString(i));
                        nueva.getLienzo().repaint();
                    }
                    
                    
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void gamasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gamasActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        BufferedImage salida = null;
        ColorConvertOp cop = null;
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    if (gamas.getSelectedItem().equals("RGB")){
                        tituloBanda = "RGB";
                        ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_sRGB);
                        cop = new ColorConvertOp(cs, null);
                        salida = cop.filter(mainImage, null);
                        
                    }else if(gamas.getSelectedItem().equals("YCC")){
                        tituloBanda = "YCC";
                        ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_PYCC);
                        cop = new ColorConvertOp(cs, null);
                        salida = cop.filter(mainImage, null);

                    }else if(gamas.getSelectedItem().equals("GREY")){
                        tituloBanda = "GREY";
                        ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_GRAY);
                        cop = new ColorConvertOp(cs, null);
                        salida = cop.filter(mainImage, null);
                        
                    }
                    
                    botonNuevoActionPerformed(evt);
                    VentanaInterna nueva = (VentanaInterna) (jDesktopPane1.getSelectedFrame());

                    nueva.getLienzo().setIm(salida);
                    nueva.getLienzo().setCargada(true);
                    nueva.setTitle(tituloBanda);
                    nueva.setTitle(Integer.toString(1));
                    nueva.getLienzo().repaint();
                    
                    
                    
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_gamasActionPerformed

    private void contrasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contrasteActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    int type = LookupTableProducer.TYPE_SFUNCION;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
                    lop.filter( mainImage , mainImage);
                    vi.repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_contrasteActionPerformed

    private void iluminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iluminarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    int type = LookupTableProducer.TYPE_LOGARITHM;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
                    lop.filter( mainImage , mainImage);
                    vi.repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_iluminarActionPerformed

    private void oscurecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oscurecerActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    int type = LookupTableProducer.TYPE_POWER;
                    LookupTable lt = LookupTableProducer.createLookupTable(type);
                    LookupOp lop = new LookupOp(lt, null);
                    lop.filter( mainImage , mainImage);
                    vi.repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_oscurecerActionPerformed

    private void senoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senoActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    byte f[] = new byte[256];
                    double w = Math.toRadians(180.0/255.0);
                    LookupTable lt;
                    lt = seno(w);
                    LookupOp lop = new LookupOp(lt, null);
                    BufferedImage imdest = lop.filter( mainImage,null);
                    vi.getLienzo().setIm(imdest);
                    vi.getLienzo().repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_senoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            this.mainImage = vi.getLienzo().getIm();
        }

        if (mainImage != null) {
            //Creamos el modelo de color de la nueva imagen basado en un espcio de color GRAY
            ColorSpace cs = ColorSpace.getInstance(ColorSpace.CS_GRAY);
            ComponentColorModel cm = new ComponentColorModel(cs, false, false, Transparency.OPAQUE, DataBuffer.TYPE_BYTE);
            //Creamos el nuevo raster a partir del raster de la imagen original

            int n_bandas = this.prIm.getRaster().getNumBands();

            for (int i = 0; i < n_bandas; ++i) {
                int bandList[] = {i};
                WritableRaster bandRaster = (WritableRaster) mainImage.getRaster().createWritableChild(0, 0,
                mainImage.getWidth(), mainImage.getHeight(), 0, 0, bandList);
                BufferedImage imgBanda = new BufferedImage(cm, bandRaster, false, null);
                
                botonNuevoActionPerformed(evt);
                VentanaInterna nueva = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
                nueva.getLienzo().setIm(imgBanda);
                nueva.getLienzo().setCargada(true);
                nueva.setTitle(Integer.toString(i));
                nueva.getLienzo().repaint();
                
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void giro90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giro90ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    double r = Math.toRadians(90);
                    Point c = new Point(mainImage.getWidth()/2, mainImage.getHeight()/2);
                    AffineTransform at = AffineTransform.getRotateInstance(r,c.x,c.y);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imdest = atop.filter(mainImage, null);
                    vi.getLienzo().setIm(imdest);
                    vi.getLienzo().repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_giro90ActionPerformed

    private void giro180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giro180ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    double r = Math.toRadians(180);
                    Point c = new Point(mainImage.getWidth()/2, mainImage.getHeight()/2);
                    AffineTransform at = AffineTransform.getRotateInstance(r,c.x,c.y);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imdest = atop.filter(mainImage, null);
                    vi.getLienzo().setIm(imdest);
                    vi.getLienzo().repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_giro180ActionPerformed

    private void giro270ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giro270ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    double r = Math.toRadians(270);
                    Point c = new Point(mainImage.getWidth()/2, mainImage.getHeight()/2);
                    AffineTransform at = AffineTransform.getRotateInstance(r,c.x,c.y);
                    AffineTransformOp atop;
                    atop = new AffineTransformOp(at,AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imdest = atop.filter(mainImage, null);
                    vi.getLienzo().setIm(imdest);
                    vi.getLienzo().repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_giro270ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    AffineTransform at = AffineTransform.getScaleInstance(1.1,1.1);
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imdest = atop.filter(mainImage, null);
                    vi.getLienzo().setIm(imdest);
                    vi.getLienzo().repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (jDesktopPane1.getSelectedFrame());
        if (vi != null) {
            if(vi.getLienzo().getIm()!=null){
                try{
                    mainImage = vi.getLienzo().getIm();
                    AffineTransform at = AffineTransform.getScaleInstance(0.90,0.90);
                    AffineTransformOp atop = new AffineTransformOp(at, AffineTransformOp.TYPE_BILINEAR);
                    BufferedImage imdest = atop.filter(mainImage, null);
                    vi.getLienzo().setIm(imdest);
                    vi.getLienzo().repaint();
                }catch(IllegalArgumentException e){
                    System.err.println(e.getLocalizedMessage());
                }
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = new VentanaInterna();
        vi = (VentanaInterna)jDesktopPane1.getSelectedFrame();
        int c = jComboBox2.getSelectedIndex();
        if (vi != null){
            if(c == 0){
                vi.getLienzo().setColor(Color.red);
                vi.getLienzo().repaint();
            }else if (c == 1){
                vi.getLienzo().setColor(Color.black);
                vi.getLienzo().repaint();
            }else if (c == 2){
                vi.getLienzo().setColor(Color.blue);
                vi.getLienzo().repaint();
            }else if (c == 3){
                vi.getLienzo().setColor(Color.green);
                vi.getLienzo().repaint();
            }else if (c == 4){
                vi.getLienzo().setColor(Color.white);
                vi.getLienzo().repaint();
            }else if (c == 5){
                vi.getLienzo().setColor(Color.yellow);
                vi.getLienzo().repaint();
            }
        }
        
        
        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    public LookupTable seno(double w){
 
        double K = 255.0;
        byte lt[] = new byte[256];
        lt[0]=0;
        for (int i=1; i<256; ++i){
            lt[i] = (byte)(K*(Math.sin(w*i)));
            //if(lt[i]<0)
                //lt[i]*=-1.0;
        }
        ByteLookupTable slt = new ByteLookupTable(0,lt);
        return slt;
    }       
    
    

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem afine;
    private javax.swing.JMenuItem banda;
    private javax.swing.JToggleButton botonAbrir;
    private static javax.swing.JToggleButton botonAlisar;
    private static javax.swing.JToggleButton botonCirculo;
    private javax.swing.JToggleButton botonGuardar;
    private static javax.swing.JToggleButton botonLapiz;
    private javax.swing.JToggleButton botonNuevo;
    private static javax.swing.JToggleButton botonRaya;
    private static javax.swing.JToggleButton botonRectangulo;
    private static javax.swing.JToggleButton botonRelleno;
    private static javax.swing.JToggleButton botonSeleccionar;
    private static javax.swing.JToggleButton botonTransparencia;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton contraste;
    private javax.swing.JMenuItem convolve;
    private javax.swing.JMenuItem coverter;
    private javax.swing.JComboBox<String> gamas;
    private javax.swing.JButton giro180;
    private javax.swing.JButton giro270;
    private javax.swing.JButton giro90;
    private javax.swing.JButton iluminar;
    private javax.swing.JMenuItem itemAbrir;
    private javax.swing.JMenuItem itemCopiar;
    private javax.swing.JMenuItem itemCortar;
    private javax.swing.JMenuItem itemFichero;
    private javax.swing.JMenuItem itemGuardar;
    private javax.swing.JMenuItem itemImpersora;
    private javax.swing.JMenuItem itemNuevo;
    private javax.swing.JMenuItem itemPegar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private static javax.swing.JComboBox jComboBox2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider3;
    private static javax.swing.JSpinner jSpinner1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenu menuEditar;
    private javax.swing.JMenu menuImagen;
    private javax.swing.JButton oscurecer;
    private javax.swing.JMenuItem rescale;
    private javax.swing.JButton seno;
    private javax.swing.JMenu submenuImprimir;
    // End of variables declaration//GEN-END:variables
}
